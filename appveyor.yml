version: "{build}"
image: Visual Studio 2017
clone_depth: 1
environment:
  matrix:
  - variant: release
    model: 64
    compiler: msvc-14.1
    PYTHON: "C:\\Python36-x64"
  - variant: release
    model: 64
    compiler: msvc-14.1
    PYTHON: "C:\\Python37-x64"

install:
  - SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%
  - git submodule update --init --recursive
  - set ROOT_DIRECTORY=%CD%
  - cd %ROOT_DIRECTORY%
  - if not defined compiler ( set compiler="" )
  - if not defined crypto ( set crypto=built-in )
  - if not defined linkflags ( set linkflags="" )
  - if not defined include ( set include="" )
  - cd %ROOT_DIRECTORY%
  - set BOOST_ROOT=c:\Libraries\boost_1_69_0
  - set BOOST_BUILD_PATH=%BOOST_ROOT%\tools\build
  - echo %BOOST_ROOT%
  - echo %BOOST_BUILD_PATH%
  - set PATH=%PATH%;%BOOST_BUILD_PATH%\src\engine\bin.ntx86
  - cd %ROOT_DIRECTORY%
  - set PATH=c:\msys64\mingw32\bin;%PATH%
  - g++ --version
  - python -VV
  - echo %ROOT_DIRECTORY%
  - cd %BOOST_BUILD_PATH%\src\engine
  - build.bat >nul
  - cd %ROOT_DIRECTORY%

build_script:
  # python binding
  - cd %ROOT_DIRECTORY%\bindings\python
  - python -m pip3 install wheel
  - pip -V
  - pip show wheel
  - python setup.py bdist_wheel
  - >
    b2.exe --hash
    -j2
    toolset=%compiler%
    address-model=%model%
    variant=%variant%
    link=shared
    crypto=openssl
    libtorrent-link=shared
    stage_module
    stage_dependencies
    openssl-include=C:\\OpenSSL-v11-Win64\\include
    openssl-lib=C:\\OpenSSL-v11-Win64\\lib
    variant=%variant%
  - python setup.py --bjam bdist_wheel bdist_msi
#~ test_script:
  #~ - cd %ROOT_DIRECTORY%\bindings\python
  #~ # we use 64 bit python build
  #~ - if defined python (
    #~ copy dependencies\*.* .
    #~ & c:\Python35-x64\python.exe test.py -b
    #~ )

artifacts:
  - path: bindings\python\dist\*.whl
    name: python-wheel
  - path: bindings\python\dist\*.msi
    name: python-binding-win32
  - path: bindings\python\libtorrent*.pyd
    name: libtorrent.pyd
