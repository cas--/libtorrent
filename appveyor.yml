version: 1.0.{build}
branches:
  only:
  - RC_1_1
clone_depth: 1
environment:
  matrix:
  # ~ - variant: test_debug
    # ~ compiler: msvc-14.0
    # ~ os: Visual Studio 2015
    # ~ sim: 1
  # ~ - variant: test_debug
    # ~ compiler: msvc-12.0
    # ~ os: Visual Studio 2013
    # ~ x64: 1
  - variant: release
    python_package: 1
    compiler: msvc-14.0
    os: Visual Studio 2015
    x64: 1
    PYTHON: "C:\\Python36-x64"
    PYTHON_VERSION: 3.6
    PYTHON_ARCH: 64
  # ~ - variant: test_barebones
    # ~ compiler: msvc-12.0
    # ~ os: Visual Studio 2013
  # ~ - variant: test_release
    # ~ compiler: msvc-12.0
    # ~ os: Visual Studio 2013

# mingw and boost.random don't like each other. Comment this back in once there
# is support

#  - variant: test_debug
#    compiler: gcc
#    linkflags: '"-LC:\\OpenSSL-Win32\\lib"'

install:
- SET PATH=%PYTHON%;%path%
- if defined sim ( git submodule update --init --recursive )
- set ROOT_DIRECTORY=%CD%
- cd %ROOT_DIRECTORY%
# ~ - if %compiler% == msvc-12.0 (
    # ~ if not exist openssl-1.0.1p-vs2013.7z (
      # ~ echo downloading openssl-2013
      # ~ & appveyor DownloadFile "https://www.npcglib.org/~stathis/downloads/openssl-1.0.1p-vs2013.7z"
    # ~ )
  # ~ )
# ~ - if %compiler% == msvc-12.0 (
    # ~ echo extracting openssl-2013
    # ~ & 7z x -oc:\ -aoa openssl-1.0.1p-vs2013.7z > nul
    # ~ & rename c:\openssl-1.0.1p-vs2013 openssl
    # ~ & copy c:\openssl\lib64\ssleay32MT.lib c:\openssl\lib64\ssleay32.lib
    # ~ & copy c:\openssl\lib64\libeay32MT.lib c:\openssl\lib64\libeay32.lib
    # ~ & copy c:\openssl\lib\ssleay32MT.lib c:\openssl\lib\ssleay32.lib
    # ~ & copy c:\openssl\lib\libeay32MT.lib c:\openssl\lib\libeay32.lib
  # ~ )
# ~ - if %compiler% == msvc-10.0 (
    # ~ if not exist openssl-1.0.1p-vs2010.7z (
      # ~ echo downloading openssl-2010
      # ~ & appveyor DownloadFile "https://www.npcglib.org/~stathis/downloads/openssl-1.0.1p-vs2010.7z"
    # ~ )
  # ~ )
# ~ - if %compiler% == msvc-10.0 (
    # ~ echo extracting openssl-2010
    # ~ & 7z x -oc:\ -aoa openssl-1.0.1p-vs2010.7z > nul
    # ~ & rename c:\openssl-1.0.1p-vs2010 openssl
    # ~ & copy c:\openssl\lib64\ssleay32MT.lib c:\openssl\lib64\ssleay32.lib
    # ~ & copy c:\openssl\lib64\libeay32MT.lib c:\openssl\lib64\libeay32.lib
    # ~ & copy c:\openssl\lib\ssleay32MT.lib c:\openssl\lib\ssleay32.lib
    # ~ & copy c:\openssl\lib\libeay32MT.lib c:\openssl\lib\libeay32.lib
  # ~ )
# ~ - if %compiler% == msvc-14.0 (
    # ~ if not exist openssl-1.1.0f-vs2015.7z (
      # ~ echo downloading openssl-2015
      # ~ & appveyor DownloadFile "https://www.npcglib.org/~stathis/downloads/openssl-1.1.0f-vs2015.7z"
    # ~ )
  # ~ )
# ~ - if %compiler% == msvc-14.0 (
    # ~ echo extracting openssl-2015
    # ~ & 7z x -oc:\ -aoa openssl-1.1.0f-vs2015.7z > nul
    # ~ & rename c:\openssl-1.1.0f-vs2015 openssl
    # ~ & copy c:\openssl\lib64\libcryptoMT.lib c:\openssl\lib64\libcrypto.lib
    # ~ & copy c:\openssl\lib64\libsslMT.lib c:\openssl\lib64\libssl.lib
    # ~ & copy c:\openssl\lib\libcryptoMT.lib c:\openssl\lib\libcrypto.lib
    # ~ & copy c:\openssl\lib\libsslMT.lib c:\openssl\lib\libssl.lib
  # ~ )
- cd %ROOT_DIRECTORY%
- set BOOST_ROOT=c:\Libraries\boost_1_66_0
- set BOOST_BUILD_PATH=%BOOST_ROOT%\tools\build
- echo %BOOST_ROOT%
- echo %BOOST_BUILD_PATH%
- set PATH=%PATH%;%BOOST_BUILD_PATH%\src\engine\bin.ntx86
#- 'echo using msvc : 10.0 ; >%HOMEDRIVE%%HOMEPATH%/user-config.jam'
- 'echo using msvc : 14.0 ; >>%HOMEDRIVE%%HOMEPATH%/user-config.jam'
#- 'echo using msvc : 12.0 ; >>%HOMEDRIVE%%HOMEPATH%/user-config.jam'
#- 'echo using msvc : 9.0 ; >>%HOMEDRIVE%%HOMEPATH%/user-config.jam'
- 'echo using python : 3.6 : c:\\Python36-x64; >>%HOMEDRIVE%%HOMEPATH%/user-config.jam'
- type %HOMEDRIVE%%HOMEPATH%\user-config.jam
- cd %ROOT_DIRECTORY%
- set PATH=%PATH%;c:\Mingw\bin
- g++ --version
- python --version
- echo %ROOT_DIRECTORY%
- cd %BOOST_BUILD_PATH%\src\engine
- build.bat >nul
- cd %ROOT_DIRECTORY%

cache:
# ~ - openssl-1.0.1p-vs2010.7z
# ~ - openssl-1.0.1p-vs2013.7z
# ~ - openssl-1.1.0f-vs2015.7z

build_script:
- cd %ROOT_DIRECTORY%\bindings\python
- b2.exe --hash -j2 %compiler% stage_module install-dependencies=on openssl-include=C:\OpenSSL-Win32\include openssl-lib=C:\OpenSSL-Win64\lib variant=%variant% libtorrent-link=shared crypto=openssl
- python test.py
- python setup.py --bjam bdist_msi

# ~ test_script:
# ~ - cd %ROOT_DIRECTORY%\test
# ~ - if defined x64 (
  # ~ appveyor-retry b2.exe -l400 --hash -j2 openssl-version=pre1.1 address-model=64 win-tests %compiler% variant=%variant% link=shared
  # ~ ) else (
  # ~ appveyor-retry b2.exe -l400 --hash -j2 openssl-version=pre1.1 address-model=32 win-tests %compiler% variant=%variant% link=shared
  # ~ )
# ~ - if defined sim (
  # ~ cd %ROOT_DIRECTORY%\simulation
  # ~ & b2.exe --hash -j2 openssl-version=pre1.1 link=shared crypto=built-in %compiler%
  # ~ )

on_failure:
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

artifacts:
  - path: bindings\python\dist\*.msi
    name: python-binding-win32
  - path: bindings\python\libtorrent*.pyd
    name: libtorrent.pyd
