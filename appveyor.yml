version: 1.0.{build}
clone_depth: 1
environment:
  matrix:
  - variant: test_debug
    compiler: msvc-14.0
    os: Visual Studio 2015
    sim: 1
  - variant: test_debug
    compiler: msvc-12.0
    os: Visual Studio 2013
    x64: 1
  - variant: test_debug
    python_package: 1
    compiler: msvc-10.0
    os: Visual Studio 2015
  - variant: test_barebones
    compiler: msvc-12.0
    os: Visual Studio 2013
  - variant: test_release
    compiler: msvc-12.0
    os: Visual Studio 2013

# mingw and boost.random don't like each other. Comment this back in once there
# is support

#  - variant: test_debug
#    compiler: gcc
#    linkflags: '"-LC:\\OpenSSL-Win32\\lib"'

install:
- if defined sim ( git submodule update --init --recursive )
- set ROOT_DIRECTORY=%CD%
- cd %ROOT_DIRECTORY%
- set BOOST_ROOT=c:\Libraries\boost_1_63_0
- set BOOST_BUILD_PATH=%BOOST_ROOT%\tools\build
- echo %BOOST_ROOT%
- echo %BOOST_BUILD_PATH%
- set PATH=%PATH%;%BOOST_BUILD_PATH%\src\engine\bin.ntx86
- 'echo using msvc : 10.0 ; >%HOMEDRIVE%%HOMEPATH%/user-config.jam'
- 'echo using msvc : 14.0 ; >>%HOMEDRIVE%%HOMEPATH%/user-config.jam'
- 'echo using msvc : 12.0 ; >>%HOMEDRIVE%%HOMEPATH%/user-config.jam'
- 'echo using msvc : 9.0 ; >>%HOMEDRIVE%%HOMEPATH%/user-config.jam'
- type %HOMEDRIVE%%HOMEPATH%\user-config.jam
- cd %ROOT_DIRECTORY%
- set PATH=%PATH%;c:\Mingw\bin
- g++ --version
- python --version
- echo %ROOT_DIRECTORY%
- cd %BOOST_BUILD_PATH%\src\engine
- build.bat >nul
- cd %ROOT_DIRECTORY%

cache:
#- openssl-1.0.1p-vs2010.7z

build_script:
- if not defined x64 (
  cd %ROOT_DIRECTORY%\examples
  & if %compiler% == msvc-14.0 (
    b2.exe --hash -j2 crypto=openssl openssl-version=pre1.1 address-model=32 %compiler% variant=%variant% debug-iterators=on picker-debugging=on invariant-checks=full link=shared bt-get bt-get2
  ) else (
    b2.exe --hash -j2 crypto=openssl openssl-version=pre1.1 address-model=32 %compiler% variant=%variant% debug-iterators=on picker-debugging=on invariant-checks=full link=shared
  )
  & cd %ROOT_DIRECTORY%\bindings\python
  & b2.exe --hash -j2 crypto=openssl openssl-version=pre1.1 %compiler% stage_module install-dependencies=on variant=%variant% libtorrent-link=shared
  & python test.py
  & if defined python_package ( python setup.py --bjam bdist_msi )
  )

test_script:
- cd %ROOT_DIRECTORY%\test
- if defined x64 (
  appveyor-retry b2.exe -l400 --hash -j2 openssl-version=pre1.1 address-model=64 win-tests %compiler% variant=%variant% link=shared
  ) else (
  appveyor-retry b2.exe -l400 --hash -j2 openssl-version=pre1.1 address-model=32 win-tests %compiler% variant=%variant% link=shared
  )
- if defined sim (
  cd %ROOT_DIRECTORY%\simulation
  & b2.exe --hash -j2 link=shared crypto=built-in %compiler%
  )

artifacts:
  - path: bindings\python\dist\*.msi
    name: python-binding-win32
